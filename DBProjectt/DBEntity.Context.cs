//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBProjectt
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Crs_Exam_Ques> Crs_Exam_Ques { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Ins_Course> Ins_Course { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<St_Ques_Exam> St_Ques_Exam { get; set; }
        public virtual DbSet<Stud_Course> Stud_Course { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
    
        public virtual ObjectResult<string> course_delete(Nullable<int> crsId)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("course_delete", crsIdParameter);
        }
    
        public virtual ObjectResult<string> course_insert(Nullable<int> crsId, string crsName, Nullable<int> crsDuration)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var crsNameParameter = crsName != null ?
                new ObjectParameter("crsName", crsName) :
                new ObjectParameter("crsName", typeof(string));
    
            var crsDurationParameter = crsDuration.HasValue ?
                new ObjectParameter("crsDuration", crsDuration) :
                new ObjectParameter("crsDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("course_insert", crsIdParameter, crsNameParameter, crsDurationParameter);
        }
    
        public virtual ObjectResult<string> course_update(Nullable<int> crsId, string crsName, Nullable<int> crsDuration)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var crsNameParameter = crsName != null ?
                new ObjectParameter("crsName", crsName) :
                new ObjectParameter("crsName", typeof(string));
    
            var crsDurationParameter = crsDuration.HasValue ?
                new ObjectParameter("crsDuration", crsDuration) :
                new ObjectParameter("crsDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("course_update", crsIdParameter, crsNameParameter, crsDurationParameter);
        }
    
        public virtual ObjectResult<string> DeleteDepartment(Nullable<int> dept_Id)
        {
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteDepartment", dept_IdParameter);
        }
    
        public virtual ObjectResult<string> DeleteInstructor(Nullable<int> ins_Id)
        {
            var ins_IdParameter = ins_Id.HasValue ?
                new ObjectParameter("Ins_Id", ins_Id) :
                new ObjectParameter("Ins_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteInstructor", ins_IdParameter);
        }
    
        public virtual ObjectResult<string> Deletestudent(Nullable<int> st_Id)
        {
            var st_IdParameter = st_Id.HasValue ?
                new ObjectParameter("St_Id", st_Id) :
                new ObjectParameter("St_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Deletestudent", st_IdParameter);
        }
    
        public virtual int Exam_Correction(Nullable<int> stdId, Nullable<int> examid)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            var examidParameter = examid.HasValue ?
                new ObjectParameter("examid", examid) :
                new ObjectParameter("examid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Exam_Correction", stdIdParameter, examidParameter);
        }
    
        public virtual ObjectResult<string> exam_delete(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("exam_delete", examIdParameter);
        }
    
        public virtual int Exam_insert(Nullable<int> crsId, string duration, Nullable<int> mark)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var markParameter = mark.HasValue ?
                new ObjectParameter("mark", mark) :
                new ObjectParameter("mark", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Exam_insert", crsIdParameter, durationParameter, markParameter);
        }
    
        public virtual ObjectResult<string> exam_update(Nullable<int> examId, Nullable<int> crsId, string duration, Nullable<int> mark)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var markParameter = mark.HasValue ?
                new ObjectParameter("mark", mark) :
                new ObjectParameter("mark", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("exam_update", examIdParameter, crsIdParameter, durationParameter, markParameter);
        }
    
        public virtual ObjectResult<string> ExamGeneration(Nullable<int> crs_Id, Nullable<int> mCQ_No, Nullable<int> t_F_No)
        {
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            var mCQ_NoParameter = mCQ_No.HasValue ?
                new ObjectParameter("MCQ_No", mCQ_No) :
                new ObjectParameter("MCQ_No", typeof(int));
    
            var t_F_NoParameter = t_F_No.HasValue ?
                new ObjectParameter("T_F_No", t_F_No) :
                new ObjectParameter("T_F_No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ExamGeneration", crs_IdParameter, mCQ_NoParameter, t_F_NoParameter);
        }
    
        public virtual ObjectResult<GetInstructorCourses_Result> GetInstructorCourses(Nullable<int> instructorID)
        {
            var instructorIDParameter = instructorID.HasValue ?
                new ObjectParameter("InstructorID", instructorID) :
                new ObjectParameter("InstructorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInstructorCourses_Result>("GetInstructorCourses", instructorIDParameter);
        }
    
        public virtual ObjectResult<GetSetudentByDepartment_Result> GetSetudentByDepartment(Nullable<int> dept_Id)
        {
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSetudentByDepartment_Result>("GetSetudentByDepartment", dept_IdParameter);
        }
    
        public virtual ObjectResult<GetStudentGrades_Result> GetStudentGrades(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentGrades_Result>("GetStudentGrades", studentIDParameter);
        }
    
        public virtual ObjectResult<string> insert_Crs_Exam_Ques(Nullable<int> crs_Id, Nullable<int> exam_Id, Nullable<int> ques_Id)
        {
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            var exam_IdParameter = exam_Id.HasValue ?
                new ObjectParameter("Exam_Id", exam_Id) :
                new ObjectParameter("Exam_Id", typeof(int));
    
            var ques_IdParameter = ques_Id.HasValue ?
                new ObjectParameter("Ques_Id", ques_Id) :
                new ObjectParameter("Ques_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_Crs_Exam_Ques", crs_IdParameter, exam_IdParameter, ques_IdParameter);
        }
    
        public virtual ObjectResult<string> insert_Ins_Course(Nullable<int> crs_Id, Nullable<int> ins_Id)
        {
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            var ins_IdParameter = ins_Id.HasValue ?
                new ObjectParameter("Ins_Id", ins_Id) :
                new ObjectParameter("Ins_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_Ins_Course", crs_IdParameter, ins_IdParameter);
        }
    
        public virtual ObjectResult<string> insert_std_Course(Nullable<int> crs_Id, Nullable<int> st_Id)
        {
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            var st_IdParameter = st_Id.HasValue ?
                new ObjectParameter("St_Id", st_Id) :
                new ObjectParameter("St_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_std_Course", crs_IdParameter, st_IdParameter);
        }
    
        public virtual ObjectResult<string> insertDepartment(Nullable<int> dept_Id, string dept_Name, string dept_Desc, string dept_Location)
        {
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            var dept_NameParameter = dept_Name != null ?
                new ObjectParameter("Dept_Name", dept_Name) :
                new ObjectParameter("Dept_Name", typeof(string));
    
            var dept_DescParameter = dept_Desc != null ?
                new ObjectParameter("Dept_Desc", dept_Desc) :
                new ObjectParameter("Dept_Desc", typeof(string));
    
            var dept_LocationParameter = dept_Location != null ?
                new ObjectParameter("Dept_Location", dept_Location) :
                new ObjectParameter("Dept_Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insertDepartment", dept_IdParameter, dept_NameParameter, dept_DescParameter, dept_LocationParameter);
        }
    
        public virtual ObjectResult<string> InsertInstructor(Nullable<int> ins_Id, string ins_Name, string ins_Degree, Nullable<decimal> salary, Nullable<int> dept_Id)
        {
            var ins_IdParameter = ins_Id.HasValue ?
                new ObjectParameter("Ins_Id", ins_Id) :
                new ObjectParameter("Ins_Id", typeof(int));
    
            var ins_NameParameter = ins_Name != null ?
                new ObjectParameter("Ins_Name", ins_Name) :
                new ObjectParameter("Ins_Name", typeof(string));
    
            var ins_DegreeParameter = ins_Degree != null ?
                new ObjectParameter("Ins_Degree", ins_Degree) :
                new ObjectParameter("Ins_Degree", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(decimal));
    
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertInstructor", ins_IdParameter, ins_NameParameter, ins_DegreeParameter, salaryParameter, dept_IdParameter);
        }
    
        public virtual ObjectResult<string> Insertstudent(string st_Fname, string st_Lname, string st_UserName, string st_Password, string st_Phone, string st_Address, Nullable<int> st_Age, Nullable<int> dept_Id)
        {
            var st_FnameParameter = st_Fname != null ?
                new ObjectParameter("St_Fname", st_Fname) :
                new ObjectParameter("St_Fname", typeof(string));
    
            var st_LnameParameter = st_Lname != null ?
                new ObjectParameter("St_Lname", st_Lname) :
                new ObjectParameter("St_Lname", typeof(string));
    
            var st_UserNameParameter = st_UserName != null ?
                new ObjectParameter("St_UserName", st_UserName) :
                new ObjectParameter("St_UserName", typeof(string));
    
            var st_PasswordParameter = st_Password != null ?
                new ObjectParameter("St_Password", st_Password) :
                new ObjectParameter("St_Password", typeof(string));
    
            var st_PhoneParameter = st_Phone != null ?
                new ObjectParameter("St_Phone", st_Phone) :
                new ObjectParameter("St_Phone", typeof(string));
    
            var st_AddressParameter = st_Address != null ?
                new ObjectParameter("St_Address", st_Address) :
                new ObjectParameter("St_Address", typeof(string));
    
            var st_AgeParameter = st_Age.HasValue ?
                new ObjectParameter("St_Age", st_Age) :
                new ObjectParameter("St_Age", typeof(int));
    
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insertstudent", st_FnameParameter, st_LnameParameter, st_UserNameParameter, st_PasswordParameter, st_PhoneParameter, st_AddressParameter, st_AgeParameter, dept_IdParameter);
        }
    
        public virtual ObjectResult<string> ques_Choices_insert(Nullable<int> quesId, string quesText, string quesType, Nullable<int> crsId, Nullable<int> points, string correctAnswer, string choice1, string choice2, string choice3, string choice4)
        {
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            var quesTextParameter = quesText != null ?
                new ObjectParameter("quesText", quesText) :
                new ObjectParameter("quesText", typeof(string));
    
            var quesTypeParameter = quesType != null ?
                new ObjectParameter("quesType", quesType) :
                new ObjectParameter("quesType", typeof(string));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("points", points) :
                new ObjectParameter("points", typeof(int));
    
            var correctAnswerParameter = correctAnswer != null ?
                new ObjectParameter("correctAnswer", correctAnswer) :
                new ObjectParameter("correctAnswer", typeof(string));
    
            var choice1Parameter = choice1 != null ?
                new ObjectParameter("choice1", choice1) :
                new ObjectParameter("choice1", typeof(string));
    
            var choice2Parameter = choice2 != null ?
                new ObjectParameter("choice2", choice2) :
                new ObjectParameter("choice2", typeof(string));
    
            var choice3Parameter = choice3 != null ?
                new ObjectParameter("choice3", choice3) :
                new ObjectParameter("choice3", typeof(string));
    
            var choice4Parameter = choice4 != null ?
                new ObjectParameter("choice4", choice4) :
                new ObjectParameter("choice4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ques_Choices_insert", quesIdParameter, quesTextParameter, quesTypeParameter, crsIdParameter, pointsParameter, correctAnswerParameter, choice1Parameter, choice2Parameter, choice3Parameter, choice4Parameter);
        }
    
        public virtual ObjectResult<string> ques_Choices_update(Nullable<int> quesId, string quesText, string quesType, Nullable<int> crsId, Nullable<int> points, string correctAnswer, string choice1, string choice2, string choice3, string choice4)
        {
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            var quesTextParameter = quesText != null ?
                new ObjectParameter("quesText", quesText) :
                new ObjectParameter("quesText", typeof(string));
    
            var quesTypeParameter = quesType != null ?
                new ObjectParameter("quesType", quesType) :
                new ObjectParameter("quesType", typeof(string));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("points", points) :
                new ObjectParameter("points", typeof(int));
    
            var correctAnswerParameter = correctAnswer != null ?
                new ObjectParameter("correctAnswer", correctAnswer) :
                new ObjectParameter("correctAnswer", typeof(string));
    
            var choice1Parameter = choice1 != null ?
                new ObjectParameter("choice1", choice1) :
                new ObjectParameter("choice1", typeof(string));
    
            var choice2Parameter = choice2 != null ?
                new ObjectParameter("choice2", choice2) :
                new ObjectParameter("choice2", typeof(string));
    
            var choice3Parameter = choice3 != null ?
                new ObjectParameter("choice3", choice3) :
                new ObjectParameter("choice3", typeof(string));
    
            var choice4Parameter = choice4 != null ?
                new ObjectParameter("choice4", choice4) :
                new ObjectParameter("choice4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ques_Choices_update", quesIdParameter, quesTextParameter, quesTypeParameter, crsIdParameter, pointsParameter, correctAnswerParameter, choice1Parameter, choice2Parameter, choice3Parameter, choice4Parameter);
        }
    
        public virtual ObjectResult<string> ques_delete(Nullable<int> quesId)
        {
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ques_delete", quesIdParameter);
        }
    
        public virtual ObjectResult<QuesExamChoiceReport_Result> QuesExamChoiceReport(Nullable<int> examNumber)
        {
            var examNumberParameter = examNumber.HasValue ?
                new ObjectParameter("ExamNumber", examNumber) :
                new ObjectParameter("ExamNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QuesExamChoiceReport_Result>("QuesExamChoiceReport", examNumberParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> ST_Ques_Exam_insert(Nullable<int> examId, Nullable<int> quesId, Nullable<int> stdId, string stdAnswer)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            var stdAnswerParameter = stdAnswer != null ?
                new ObjectParameter("stdAnswer", stdAnswer) :
                new ObjectParameter("stdAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ST_Ques_Exam_insert", examIdParameter, quesIdParameter, stdIdParameter, stdAnswerParameter);
        }
    
        public virtual ObjectResult<StudExamQuesReport_Result> StudExamQuesReport(Nullable<int> examNumber, Nullable<int> studentID)
        {
            var examNumberParameter = examNumber.HasValue ?
                new ObjectParameter("ExamNumber", examNumber) :
                new ObjectParameter("ExamNumber", typeof(int));
    
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudExamQuesReport_Result>("StudExamQuesReport", examNumberParameter, studentIDParameter);
        }
    
        public virtual ObjectResult<string> topic_delete(Nullable<int> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("topic_delete", topicIdParameter);
        }
    
        public virtual ObjectResult<string> topic_insert(Nullable<int> topicId, string topicName, Nullable<int> crsId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("topicName", topicName) :
                new ObjectParameter("topicName", typeof(string));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("topic_insert", topicIdParameter, topicNameParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<string> topic_update(Nullable<int> topicId, string topicName, Nullable<int> crsId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("topicName", topicName) :
                new ObjectParameter("topicName", typeof(string));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("topic_update", topicIdParameter, topicNameParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<TopicReport_Result> TopicReport(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TopicReport_Result>("TopicReport", courseIDParameter);
        }
    
        public virtual ObjectResult<string> UpdateDepartment(Nullable<int> dept_Id, string dept_Name, string dept_Desc, string dept_Location)
        {
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            var dept_NameParameter = dept_Name != null ?
                new ObjectParameter("Dept_Name", dept_Name) :
                new ObjectParameter("Dept_Name", typeof(string));
    
            var dept_DescParameter = dept_Desc != null ?
                new ObjectParameter("Dept_Desc", dept_Desc) :
                new ObjectParameter("Dept_Desc", typeof(string));
    
            var dept_LocationParameter = dept_Location != null ?
                new ObjectParameter("Dept_Location", dept_Location) :
                new ObjectParameter("Dept_Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateDepartment", dept_IdParameter, dept_NameParameter, dept_DescParameter, dept_LocationParameter);
        }
    
        public virtual ObjectResult<string> UpdateInstructor(Nullable<int> ins_Id, string ins_Name, string ins_Degree, Nullable<decimal> salary, Nullable<int> dept_Id)
        {
            var ins_IdParameter = ins_Id.HasValue ?
                new ObjectParameter("Ins_Id", ins_Id) :
                new ObjectParameter("Ins_Id", typeof(int));
    
            var ins_NameParameter = ins_Name != null ?
                new ObjectParameter("Ins_Name", ins_Name) :
                new ObjectParameter("Ins_Name", typeof(string));
    
            var ins_DegreeParameter = ins_Degree != null ?
                new ObjectParameter("Ins_Degree", ins_Degree) :
                new ObjectParameter("Ins_Degree", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(decimal));
    
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateInstructor", ins_IdParameter, ins_NameParameter, ins_DegreeParameter, salaryParameter, dept_IdParameter);
        }
    
        public virtual ObjectResult<string> Updatestudent(Nullable<int> st_Id, string st_Fname, string st_Lname, string st_UserName, string st_Password, string st_Phone, string st_Address, Nullable<int> st_Age, Nullable<int> dept_Id)
        {
            var st_IdParameter = st_Id.HasValue ?
                new ObjectParameter("St_Id", st_Id) :
                new ObjectParameter("St_Id", typeof(int));
    
            var st_FnameParameter = st_Fname != null ?
                new ObjectParameter("St_Fname", st_Fname) :
                new ObjectParameter("St_Fname", typeof(string));
    
            var st_LnameParameter = st_Lname != null ?
                new ObjectParameter("St_Lname", st_Lname) :
                new ObjectParameter("St_Lname", typeof(string));
    
            var st_UserNameParameter = st_UserName != null ?
                new ObjectParameter("St_UserName", st_UserName) :
                new ObjectParameter("St_UserName", typeof(string));
    
            var st_PasswordParameter = st_Password != null ?
                new ObjectParameter("St_Password", st_Password) :
                new ObjectParameter("St_Password", typeof(string));
    
            var st_PhoneParameter = st_Phone != null ?
                new ObjectParameter("St_Phone", st_Phone) :
                new ObjectParameter("St_Phone", typeof(string));
    
            var st_AddressParameter = st_Address != null ?
                new ObjectParameter("St_Address", st_Address) :
                new ObjectParameter("St_Address", typeof(string));
    
            var st_AgeParameter = st_Age.HasValue ?
                new ObjectParameter("St_Age", st_Age) :
                new ObjectParameter("St_Age", typeof(int));
    
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Updatestudent", st_IdParameter, st_FnameParameter, st_LnameParameter, st_UserNameParameter, st_PasswordParameter, st_PhoneParameter, st_AddressParameter, st_AgeParameter, dept_IdParameter);
        }
    }
}
